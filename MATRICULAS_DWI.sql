CREATE DATABASE MATRICULAS_DWI;

USE  MATRICULAS_DWI;

CREATE TABLE ALUMNO(
	ALUMNO_DNI INT NOT NULL primary key,
    ALUMNO_NOMBRES VARCHAR(20) NOT NULL,
    ALUMNO_APELLIDOS VARCHAR(25) NOT NULL,
    ALUMNO_FECHA_NACIMIENTO DATE NOT NULL,
    ALUMNO_GENERO VARCHAR(10) NOT NULL ,
    ALUMNO_DISTRITO VARCHAR(15) NOT NULL,
    ALUMNO_DIRECCION VARCHAR(25) NOT NULL ,
    ALUMNO_PROCEDENCIA VARCHAR(30) NOT NULL,
    ALUMNO_TELEFONO INT NOT NULL,
    ALUMNO_CORREO VARCHAR (30) ,
    ALUMNO_FOTO BLOB,
    ALUMNO_OBSERVACIONES VARCHAR(60) 
);

CREATE TABLE APODERADO(
	APODERADO_DNI INT NOT NULL primary key,
    ALUMNO_DNI INT ,
    APODERADO_NOMBRES VARCHAR(20) NOT NULL,
    APODERADO_APELLIDOS VARCHAR(25) NOT NULL,
    APODERADO_FECHA_NACIMIENTO DATE NOT NULL,
    APODERADO_GENERO VARCHAR(10) NOT NULL ,
    APODERADO_TELEFONO INT NOT NULL,
    APODERADO_CORREO VARCHAR (30),
    FOREIGN KEY (ALUMNO_DNI) REFERENCES ALUMNO(ALUMNO_DNI)
);

CREATE TABLE ESTADO_ALUMNO (
	ALUMNO_DNI INT, 
    ESTADO INT NOT NULL,    
    FOREIGN KEY (ALUMNO_DNI)REFERENCES ALUMNO(ALUMNO_DNI)
);

CREATE TABLE PAGO (
	PAGO_ID VARCHAR(6) NOT NULL PRIMARY KEY,
    ALUMNO_DNI INT ,
    PAGO_FECHA DATE NOT NULL,
    PAGO_MONTO DECIMAL(6,2) NOT NULL,   
    PAGO_BOUCHER BLOB,
    FOREIGN KEY (ALUMNO_DNI)REFERENCES ALUMNO(ALUMNO_DNI)
);

CREATE TABLE GRADO (
	GRADO_ID VARCHAR(6) NOT NULL PRIMARY KEY,
    GRADO_NOMBRE VARCHAR (5) NOT NULL
);

CREATE TABLE MATRICULA (
	MATRICULA_ID VARCHAR (7) NOT NULL PRIMARY KEY,
    GRADO_ID VARCHAR(6),
    MATRICULA_FECHA DATE,
    PAGO_ID VARCHAR(6),
	FOREIGN KEY (PAGO_ID)REFERENCES PAGO(PAGO_ID),
    FOREIGN KEY (GRADO_ID)REFERENCES GRADO(GRADO_ID)
);



CREATE TABLE DATOS_ADM (
	ADM_DNI INT NOT NULL PRIMARY KEY,
    ADM_NOMBRES VARCHAR(20) NOT NULL,
    ADM_APELLIDOS VARCHAR(25) NOT NULL,
    ADM_FECHA_NACIMIENTO DATE NOT NULL,
    ADM_TELEFONO INT NOT NULL,
    ADM_CORREO VARCHAR (30)
);

CREATE TABLE ADMINSTRADOR (
	ADM_DNI INT ,
    ADM_USUARIO VARCHAR(9) NOT NULL,
    ADM_CONTRASEÃ‘A VARCHAR(10) NOT NULL,
    FOREIGN KEY (ADM_DNI)REFERENCES DATOS_ADM(ADM_DNI)
);

CREATE TABLE CURSO(
	ID_CURSO INT NOT NULL AUTO_INCREMENT,
    GRADO_ID VARCHAR (6),
    NOM_CURSO VARCHAR (20) NOT NULL,
    primary key (ID_CURSO),
    foreign key (GRADO_ID) REFERENCES GRADO (GRADO_ID)
);
ALTER TABLE CURSO auto_increment=100;
INSERT INTO CURSO (GRADO_ID,NOM_CURSO) VALUES ('GRA001', 'CTA');
SELECT * FROM profesor;
select * from ALUMNO WHERE ALUMNO_DNI=98563256;
delete from grado where grado_id='';

ALTER TABLE ALUMNO modify ALUMNO_FOTO longblob;
/*procedimiento eliminar profesor*/
DELIMITER @@
create procedure SP_EliminarProfesor(dni int)
BEGIN
SET FOREIGN_KEY_CHECKS=0;
DELETE  PROFESOR , GRADO FROM PROFESOR INNER JOIN GRADO
ON PROFESOR.PROFESOR_DNI=GRADO.PROFESOR_DNI WHERE PROFESOR.PROFESOR_DNI=dni;
SET FOREIGN_KEY_CHECKS=1;
END @@
DELIMITER ;

/*Procedimiento actulizar profesor*/

DELIMITER @@
create procedure SP_ActualizarProfesor(
	DNI INT,
    PROFESOR_NOMBRES VARCHAR(20) ,
    PROFESOR_APELLIDOS VARCHAR(20) ,
    PROFESOR_TELEFONO INT ,
    PROFESOR_DISTRITO VARCHAR(15) ,
    PROFESOR_DIRECCION VARCHAR(25) 
)
BEGIN
UPDATE PROFESOR SET
    PROFESOR_NOMBRES =PROFESOR_NOMBRES,
    PROFESOR_APELLIDOS = PROFESOR_APELLIDOS,
    PROFESOR_TELEFONO = PROFESOR_TELEFONO,
    PROFESOR_DISTRITO = PROFESOR_DISTRITO,
    PROFESOR_DIRECCION = PROFESOR_DIRECCION
    WHERE 	PROFESOR_DNI = DNI;
END @@
DELIMITER ;

CALL SP_ActualizarProfesor(85696325, 'LUIS MIGUEL', 'GUERRERO PRADO', 985632558, 'JLO - CIX', 'LAS VEGAS 231');

select * from profesor;

/*********/

SELECT * FROM PROFESOR;
INSERT INTO GRADO VALUES('GRA021','2DO B', 74185233);
CALL SP_EliminarProfesor(74185233);

/*GRADO PROFESOR*/
alter table grado add PROFESOR_DNI INT NOT NULL;
ALTER TABLE GRADO ADD CONSTRAINT FK_PROFESOR_DNI_GRADO FOREIGN KEY (PROFESOR_DNI) REFERENCES PROFESOR(PROFESOR_DNI);


RENAME TABLE ADMINSTRADOR TO ADMINISTRADOR;

/*PROCEDIMIENTOS ALMACENADOS*/
DELIMITER @@
create procedure SP_AgregarAlumnos(
	A_DNI INT,
    A_NOMBRES VARCHAR(20) ,
    A_APELLIDOS VARCHAR(25) ,
    A_NAC DATE ,
    A_GENERO VARCHAR(10) ,
    A_DISTRITO VARCHAR(15),
    A_DIRECCION VARCHAR(25) ,
    A_PROCEDENCIA VARCHAR(30) ,
    A_TELEFONO INT,
    A_CORREO VARCHAR (30),
    A_FOTO BLOB,
    A_OBS VARCHAR(60), 
    APOD_DNI INT,
    APOD_NOMBRES VARCHAR(20),
    APOD_APELLIDOS VARCHAR(25) ,
    APOD_NAC DATE ,
    APOD_GENERO VARCHAR(10) ,
    APOD_TEL INT,
    APOD_CORREO VARCHAR (30))
    BEGIN
    INSERT INTO alumno VALUES(A_DNI ,
    A_NOMBRES ,
    A_APELLIDOS,
    A_NAC  ,
    A_GENERO  ,
    A_DISTRITO,
    A_DIRECCION  ,
    A_PROCEDENCIA ,
    A_TELEFONO ,
    A_CORREO ,
    A_FOTO ,
    A_OBS);
    INSERT INTO apoderado values(
    APOD_DNI ,
    A_DNI,
    APOD_NOMBRES ,
    APOD_APELLIDOS  ,
    APOD_NAC  ,
    APOD_GENERO ,
    APOD_TEL ,
    APOD_CORREO );
END @@
DELIMITER ;
    

/*AGREGAR ALUMNOS - TIPO DE FECHA*/
CALL SP_AgregarAlumnos(34567891,'CESAR','HERRERA','2002/05/05','MASCULINO','CHICLAYO','LAS VEGAS78','LIMA','987654123','CESAR@GMAIO.COM','CESAR.JPG','ACESAR PRUEBAS CESAR'
,'84563259','ALBERTO','LOZANO','1986/04/05','MASCULINO','589632147','ALBERTO@GMAIL.COM');
SELECT * FROM ALUMNO;
SELECT * FROM APODERADO;
/*ELIMINAR ALUMNO */

DELETE  ALUMNO , APODERADO FROM APODERADO INNER JOIN ALUMNO
ON ALUMNO.ALUMNO_DNI=APODERADO.ALUMNO_DNI WHERE ALUMNO.ALUMNO_DNI=84525636;


 
/* PROCEDIMIENTO ELIMINAR ALUMNO*/

DELIMITER @@
create procedure SP_EliminarAlumno(dni int)
BEGIN
DELETE  ALUMNO , APODERADO FROM APODERADO INNER JOIN ALUMNO
ON ALUMNO.ALUMNO_DNI=APODERADO.ALUMNO_DNI WHERE ALUMNO.ALUMNO_DNI=dni;
END @@
DELIMITER ;

/*PROCEDIMIENTO CREAR GRADO*/
DELIMITER @@
create procedure SP_AgregarGrado(NOMBRE_GRADO VARCHAR(5))
BEGIN
DECLARE CUENTA INT;
DECLARE IDGRA VARCHAR(6);
SELECT RIGHT (MAX(GRADO_ID),3)+1 INTO CUENTA FROM GRADO;
SET IDGRA=CONCAT("GRA",LPAD(CUENTA,3,"0"));
INSERT INTO GRADO VALUES (IDGRA, NOMBRE_GRADO);
END @@
DELIMITER ;
/* AGREGAR GRADO*/ 

CALL SP_AgregarGrado ("1ro B");
CALL SP_AgregarGrado ("2do A");
CALL SP_AgregarGrado ("2do B");
CALL SP_AgregarGrado ("2do C");
DELETE  FROM GRADO WHERE GRADO_ID = 'GRA002';
SELECT * FROM GRADO;
/* --------- */
ALTER TABLE GRADO DROP COLUMN PROFESOR_DNI;


ALTER TABLE CURSO ADD COLUMN PROFESOR_DNI INT;
ALTER TABLE CURSO ADD CONSTRAINT FK_PROFESOR_DNI FOREIGN KEY (PROFESOR_DNI) REFERENCES PROFESOR (PROFESOR_DNI);

ALTER TABLE PROFESOR DROP COLUMN GRADO_ID;
ALTER TABLE PROFESOR DROP COLUMN ID_CURSO;
SELECT * FROM PROFESOR;

/*AGREGAR PROFESOR*/
DELIMITER @@
create procedure SP_AgregarProfesor(DNI INT, NOMBRE VARCHAR(20), APELLIDO VARCHAR(20), TELEFONO INT, DISTRITO VARCHAR (15), DIRECCION VARCHAR(25) )
BEGIN
INSERT INTO PROFESOR VALUES (DNI, NOMBRE, APELLIDO , TELEFONO , DISTRITO, DIRECCION );
END @@
DELIMITER ;
CALL SP_AgregarProfesor(85696325,'LUIS','GUERRERO PRADO', 985632558,'JLO','LAS VEGAS 231');
SELECT * FROM profesor;


/*AGREGAR CURSO*/
DELIMITER @@
create procedure SP_AgregarCurso(GRADO_ID VARCHAR(6), NOM_CURSO VARCHAR (20), PROF_DNI INT)
BEGIN
INSERT INTO curso (GRADO_ID, NOM_CURSO, PROFESOR_DNI) VALUES (GRADO_ID, NOM_CURSO, PROF_DNI);
END @@
DELIMITER ;
CALL SP_AgregarCurso('GRA002','QUIMICA',77889956);
SELECT * FROM curso;

/*ELIMINAR PAGO*/
DELIMITER @@

create procedure SP_EliminarPago(PAGO_ID VARCHAR(6))
BEGIN
SET FOREIGN_KEY_CHECKS=0;
DELETE FROM PAGO WHERE PAGO_ID = PAGO_ID;
SET FOREIGN_KEY_CHECKS=1;

END @@
DELIMITER ;

/* actulizar pago*/
DELIMITER @@
 create procedure SP_ActualizarPago(
	PAGO_ID VARCHAR(6),
    ALUMNO_DNI INT ,
    PAGO_FECHA DATE,
    PAGO_MONTO DECIMAL(6,2),   
    PAGO_BOUCHER BLOB
)
BEGIN
UPDATE PAGO SET
    ALUMNO_DNI =ALUMNO_DNI,
    PAGO_FECHA = PAGO_FECHA,
    PAGO_MONTO = PAGO_MONTO,
    PAGO_BOUCHER = PAGO_BOUCHER
    WHERE PAGO_ID = PAGO_ID;
END @@
DELIMITER ;


DELETE FROM PAGO WHERE PAGO_ID = 'P12';
select P.PAGO_ID,P.ALUMNO_DNI,A.ALUMNO_NOMBRES,P.PAGO_FECHA,P.PAGO_MONTO,P.PAGO_BOUCHER from pago AS P INNER JOIN ALUMNO AS A WHERE P.ALUMNO_DNI = A.ALUMNO_DNI;
select * from pago;

/*ELIMINAR PAGO*/
DELIMITER @@
 create procedure SP_EliminarPago(
	PAGO VARCHAR(6)
)
BEGIN
SET FOREIGN_KEY_CHECKS=0;
DELETE  FROM PAGO WHERE PAGO_ID= 'PAGO';
DELETE FROM MATRICULA WHERE PAGO_ID = 'PAGO';
SET FOREIGN_KEY_CHECKS=1;
END @@
DELIMITER ;


/*ACTULIZAR GRADO*/
DELIMITER @@
CREATE PROCEDURE SP_ActualizarGrado(ID VARCHAR(6), NOMBRE_GRADO VARCHAR(5), DNI INT)
BEGIN
UPDATE GRADO SET GRADO_NOMBRE=NOMBRE_GRADO, PROFESOR_DNI=DNI WHERE GRADO_ID=ID;
END @@
DELIMITER ;

/*ELIMINAR GRADO*/
DELIMITER @@
CREATE PROCEDURE SP_EliminarGrado(ID VARCHAR(6))
BEGIN
SET FOREIGN_KEY_CHECKS =0;
DELETE FROM GRADO WHERE PAGO_ID=ID;
DELETE FROM MATRICULA WHERE PAGO_ID=ID ;
SET FOREIGN_KEY_CHECKS=1;
END @@
DELIMITER ;

 CALL SP_EliminarGrado(GRA816);

select * from grado;

